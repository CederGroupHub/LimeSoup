From cou.: 0 Journal
From Soup: 0 Phys. Chem. Chem. Phys.
 ###### 
From cou.: 1 In this work we show the implementation of a linear scaling algorithm for the calculation of the Poisson integral. We use domain decomposition and non-uniform auxiliary grids (NGs) to calculate the electrostatic interaction. We demonstrate the approach within the PARSEC density functional theory code and perform calculations of long 1D carbon chains and other long molecules. Finally, we discuss possible applications to additional problems and geometries.
From Soup: 1 In this work we show the implementation of a linear scaling algorithm for the calculation of the Poisson integral. We use domain decomposition and non-uniform auxiliary grids (NGs) to calculate the electrostatic interaction. We demonstrate the approach within the PARSEC density functional theory code and perform calculations of long 1D carbon chains and other long molecules. Finally, we discuss possible applications to additional problems and geometries.
 ###### 
From cou.: 2 Density functional theory (DFT)1 has become the method of choice for the calculation of the electronic properties of large systems, this is mostly because of a good balance between numerical accuracy and computational cost. In most applications, Kohn–Sham (KS)2 differential equations are solved either by a basis representation such as Gaussian basis sets,3 local numerical basis sets,4 plane waves,5–7 or wavelets8 or via the representation of the wave function over a discrete grid.9–15 While each method has its own advantages and disadvantages, the use of a discrete grid, also known as the real-space method,9,10,12 has some advantages for parallel implementations of large systems.16,17 Another advantage of the real-space method is that it is relatively straightforward to use the Runge–Gross theorem for time dependent DFT (TDDFT)18 and perform direct time propagation of the KS orbitals (RT-TDDFT).13,19,20 Both for the ground state and especially for the time dependent case, the calculation of the electrostatic interaction term, known as the Hartree potential, and the Fock exchange interaction term, is becoming the most time consuming part of the problem. The Hartree term is given by:
From Soup: 2 Density functional theory (DFT) 1 has become the method of choice for the calculation of the electronic properties of large systems, this is mostly because of a good balance between numerical accuracy and computational cost. In most applications, Kohn–Sham (KS) 2 differential equations are solved either by a basis representation such as Gaussian basis sets, 3 local numerical basis sets, 4 plane waves, 5–7 or wavelets 8 or via the representation of the wave function over a discrete grid. 9–15 While each method has its own advantages and disadvantages, the use of a discrete grid, also known as the real-space method, 9,10,12 has some advantages for parallel implementations of large systems. 16,17 Another advantage of the real-space method is that it is relatively straightforward to use the Runge–Gross theorem for time dependent DFT (TDDFT) 18 and perform direct time propagation of the KS orbitals (RT-TDDFT). 13,19,20 Both for the ground state and especially for the time dependent case, the calculation of the electrostatic interaction term, known as the Hartree potential, and the Fock exchange interaction term, is becoming the most time consuming part of the problem. The Hartree term is given by:
 ###### 
From cou.: 3 As the direct calculation of the integral given in eqn (1) is of (N2) complexity, where N is the number of grid points, most implementations solve instead the equivalent Poisson equation:
From Soup: 3 As the direct calculation of the integral given in eqn (1) is of ( N 2 ) complexity, where N is the number of grid points, most implementations solve instead the equivalent Poisson equation:
 ###### 
From cou.: 4 Eqn (2) is conventionally solved with iterative solvers such as conjugate gradients (CGs)21 or multi-grid solvers.15,22,23 Another approach is to use the fast Fourier transform (FFT)24,25 to calculate VH. Both CG and multi-grid solvers require the formulation of boundary conditions. For many situations, the multipole approximation26 is a good and efficient way to set the boundary conditions of the system but for structures with a high aspect ratio there are known convergence issues and so either a larger box should be taken or a much slower calculation for the boundaries should be used. With FFT the box size should be twice the size of the system in each dimension, which also makes the calculation slower. The appearance of efficient algorithms such as the fast multipole method (FMM)27,28 makes it possible to re-consider the direct calculation of eqn (1). In recent years, FMM based29–32 and other33–36 efficient integration methods were implemented for Hartree and Fock exchange terms in quantum calculations. In this work we present a method, based on auxiliary non-uniform grids (NGs),37,38 that can asymptotically reach (N) performance. The NG method uses FMM-like hierarchical domain decomposition to compute eqn (1), but represents the potentials by their values on non-uniform auxiliary grids, which are then used for interpolation to an arbitrary grid. The rest of the manuscript is organized as follows: we first review the real-space method as implemented in the PARSEC code and then describe the NG algorithm. We discuss some important implementation details, with a particular emphasis given to elongated structures. Finally, we present results, demonstrating the algorithm's performance, for the ground state calculation of 1D carbon chains. We conclude with some discussion of how this method can be used for additional geometries and also for Fock exchange and screened exchange calculations.
From Soup: 4 Eqn (2) is conventionally solved with iterative solvers such as conjugate gradients (CGs) 21 or multi-grid solvers. 15,22,23 Another approach is to use the fast Fourier transform (FFT) 24,25 to calculate V H . Both CG and multi-grid solvers require the formulation of boundary conditions. For many situations, the multipole approximation 26 is a good and efficient way to set the boundary conditions of the system but for structures with a high aspect ratio there are known convergence issues and so either a larger box should be taken or a much slower calculation for the boundaries should be used. With FFT the box size should be twice the size of the system in each dimension, which also makes the calculation slower. The appearance of efficient algorithms such as the fast multipole method (FMM) 27,28 makes it possible to re-consider the direct calculation of eqn (1) . In recent years, FMM based 29–32 and other 33–36 efficient integration methods were implemented for Hartree and Fock exchange terms in quantum calculations. In this work we present a method, based on auxiliary non-uniform grids (NGs), 37,38 that can asymptotically reach ( N ) performance. The NG method uses FMM-like hierarchical domain decomposition to compute eqn (1) , but represents the potentials by their values on non-uniform auxiliary grids, which are then used for interpolation to an arbitrary grid. The rest of the manuscript is organized as follows: we first review the real-space method as implemented in the PARSEC code and then describe the NG algorithm. We discuss some important implementation details, with a particular emphasis given to elongated structures. Finally, we present results, demonstrating the algorithm's performance, for the ground state calculation of 1D carbon chains. We conclude with some discussion of how this method can be used for additional geometries and also for Fock exchange and screened exchange calculations.
 ###### 
From cou.: 5 The real space pseudopotential method is based on sampling the orbitals on a uniform grid and converting the KS differential equations to high order finite difference equations. We first write the spin un-polarized KS equations as: where we use atomic units throughout, εm and φm are the eigenvalues and eigenvectors of the equation, respectively, and ion is the ionic potential, calculated using the pseudopotential method described in ref. 9 and 10. VH is calculated via the solution of eqn (2) and finally VXC is calculated according to the selected functional. The Fornberg39 formulation of a high order finite difference is used to write: where h is the mesh size and Cn are the finite difference coefficients. Doing so to all partial derivatives, the Laplacian is now represented by a high order finite difference discrete operator. This representation is then used in both eqn (2) and (3) self-consistently. The resulting finite difference equations are then solved as described in ref. 9 and 10. To solve eqn (3) in a finite domain the wave functions, φm, are restricted to be zero outside the domain and the KS equations are solved over that domain. While we focus in this work on finite systems, the same method can be used for 1D,40 2D, and 3D41 periodic calculations by applying the appropriate Bloch conditions. To solve the finite difference form of eqn (2) for non-periodic systems, the conjugate gradient (CG) method is used with appropriate Dirichlet boundary conditions for the potential that can be calculated via the multipole expansion and other methods.
From Soup: 5 The real space pseudopotential method is based on sampling the orbitals on a uniform grid and converting the KS differential equations to high order finite difference equations. We first write the spin un-polarized KS equations as: where we use atomic units throughout, ε m and φ m are the eigenvalues and eigenvectors of the equation, respectively, and ion is the ionic potential, calculated using the pseudopotential method described in ref. 9 and 10 . V H is calculated via the solution of eqn (2) and finally V XC is calculated according to the selected functional. The Fornberg 39 formulation of a high order finite difference is used to write: where h is the mesh size and C n are the finite difference coefficients. Doing so to all partial derivatives, the Laplacian is now represented by a high order finite difference discrete operator. This representation is then used in both eqn (2) and (3) self-consistently. The resulting finite difference equations are then solved as described in ref. 9 and 10 . To solve eqn (3) in a finite domain the wave functions, φ m , are restricted to be zero outside the domain and the KS equations are solved over that domain. While we focus in this work on finite systems, the same method can be used for 1D, 40 2D, and 3D 41 periodic calculations by applying the appropriate Bloch conditions. To solve the finite difference form of eqn (2) for non-periodic systems, the conjugate gradient (CG) method is used with appropriate Dirichlet boundary conditions for the potential that can be calculated via the multipole expansion and other methods.
 ###### 
From cou.: 6 We now focus on strategies for calculating the Hartree term. We first discuss the relationship between the continuous integral, given in eqn (1), and its possible discrete form approximation. A naïve approximation to the integral would be:
From Soup: 6 We now focus on strategies for calculating the Hartree term. We first discuss the relationship between the continuous integral, given in eqn (1) , and its possible discrete form approximation. A naïve approximation to the integral would be:
 ###### 
From cou.: 7 The summation in eqn (5) assumes (m, n, l) ≠ (i, j, k). The self-contribution term, (m, n, l) = (i, j, k), has to be found analytically or numerically and depends on the grid interpolation kernel. However, the approximation in eqn (5) is too crude in comparison to solving the high order finite difference Poisson equation and would require a very fine grid to converge. This is because the potential of a volume element of charge is not given by . The difference is significant mostly for the immediate neighbors, we can therefore try to replace 1/r Green's function by the true potential of the volume elements at the centers of neighboring elements. While there are analytical forms for the electrostatic potential of a cube, we made the choice of using the finite difference Poisson equation to calculate the potential of a point charge located at the origin and to use this potential for the values of Green's function. And so instead of calculating eqn (5), we calculate:
From Soup: 7 The summation in eqn (5) assumes ( m , n , l ) ≠ ( i , j , k ). The self-contribution term, ( m , n , l ) = ( i , j , k ), has to be found analytically or numerically and depends on the grid interpolation kernel. However, the approximation in eqn (5) is too crude in comparison to solving the high order finite difference Poisson equation and would require a very fine grid to converge. This is because the potential of a volume element of charge is not given by . The difference is significant mostly for the immediate neighbors, we can therefore try to replace 1/ r Green's function by the true potential of the volume elements at the centers of neighboring elements. While there are analytical forms for the electrostatic potential of a cube, we made the choice of using the finite difference Poisson equation to calculate the potential of a point charge located at the origin and to use this potential for the values of Green's function. And so instead of calculating eqn (5) , we calculate:
 ###### 
From cou.: 8 r
From Soup: 8 r
 ###### 
From cou.: 9 i
From Soup: 9 i , j , k
 ###### 
From cou.: 10 j
From Soup: 10 m , n , l
 ###### 
From cou.: 11 k
From Soup: 11 h
 ###### 
From cou.: 12 m
From Soup: 12 eqn (6)
 ###### 
From cou.: 13 n
From Soup: 13 N
 ###### 
From cou.: 14 l
From Soup: 14 2
 ###### 
From cou.: 15 h
From Soup: 15 In this section we review the algorithm of building a non-uniform auxiliary grid (NG) that was developed for the fast calculation of capacitance of complex systems. 37 The first part of the algorithm follows the FMM logic, but we write it here for completeness. To get some approximate, but more efficient calculation, we first note that for any set of point charges in space we can use the multipole expansion 26 and so write the potential of charges that are located in a volume Ω around the origin as: where f ( m 1 , m 2 ) is the ( m 1 , m 2 ) moment of the charge and are the spherical harmonics. Far enough from the charge volume, the expression in eqn (7) can be truncated to a finite summation up to order , while keeping a small relative error E rel . If the charges can be assumed to be all contained in a sphere of radius R S , a closed form expression can be obtained for the truncation order that is needed to get a given maximal relative error. At a distance R from the system, we would get: 37
 ###### 
From cou.: 16 N
From Soup: 16 Eqn (8) encapsulates the basic idea – that the truncation order, for a desired value of relative errors, depends only on the ratio R / R S . If we define a far-field potential as the one for which R > W · R S , i.e. the criteria for using the approximation scales linearly with the domain size, we can divide the space in a multi-level decomposition to blocks of varying size, R S , while the basic mathematical form of the far-field potential of each block, at any level, remains the same.
 ###### 
From cou.: 17 2
From Soup: 17 Next, we would like to build a method that would allow us to sample expression (7) and so use a cheaper interpolation scheme for the potential at other arbitrary grid points. At this point we deviate from traditional FMM and build the auxiliary grids. Expression (7) consists of elements of the form r − a e ibθ e icϕ with 1 ≤ a ≤ T + 1, − T ≤ b , c ≤ T . Thus, we can sample T + 1 equally spaced points in the α ≡ r −1 variable and 2 T + 1 in each of the angular coordinate variables, to fully reconstruct V T from the samples. We also note that for larger R , it is evident from eqn (8) that we can use a smaller T and hence less angular sampling points. The reconstruction is done using a polynomial interpolation in the α variable and an interpolation filter in the angular coordinates. 37
 ###### 
From cou.: 18 In this section we review the algorithm of building a non-uniform auxiliary grid (NG) that was developed for the fast calculation of capacitance of complex systems.37 The first part of the algorithm follows the FMM logic, but we write it here for completeness. To get some approximate, but more efficient calculation, we first note that for any set of point charges in space we can use the multipole expansion26 and so write the potential of charges that are located in a volume Ω around the origin as: where f(m1,m2) is the (m1,m2) moment of the charge and are the spherical harmonics. Far enough from the charge volume, the expression in eqn (7) can be truncated to a finite summation up to order , while keeping a small relative error Erel. If the charges can be assumed to be all contained in a sphere of radius RS, a closed form expression can be obtained for the truncation order that is needed to get a given maximal relative error. At a distance R from the system, we would get:37
From Soup: 18 So far, we have treated the far-field potential of a single volume and have devised an α grid that enables us to interpolate the potential. The α grid is uniform in r −1 , but non-uniform in r . The grid thus formed with the radial and angular variables is a non-uniform auxiliary grid which we call the NG. Note that although there are codes that solve the KS equations themselves on a non-uniform grid, 14,42,43 the idea here is different – we use many auxiliary non-uniform grids for the purpose of electrostatic potential interpolation. In a typical situation of decomposition of space, we would like to gather the far-field potential of many distinct domains at a given domain. To that end, we devise a new local grid that will allow us to interpolate the far-field contribution of several sources. This local grid is illustrated in Fig. 1 .
 ###### 
From cou.: 19 Eqn (8) encapsulates the basic idea – that the truncation order, for a desired value of relative errors, depends only on the ratio R/RS. If we define a far-field potential as the one for which R > W·RS, i.e. the criteria for using the approximation scales linearly with the domain size, we can divide the space in a multi-level decomposition to blocks of varying size, RS, while the basic mathematical form of the far-field potential of each block, at any level, remains the same.
From Soup: 19 In this construction, we build a grid that is uniform in all co-ordinates and has a total number of grid points that is also independent of system size for a given required relative error. In practice, we use sampling that is denser than the theoretical requirements to allow for a linear interpolation of the potential from its samples, which reduces the total complexity. Also, the potential at the sampling points is at first constructed using the exact, discretized integration form, eqn (6) , and not the truncated multipole expression, and the values that are sampled on the grid are of the function rV ( ), which is a smoother function and is less prone to numerical issues. Once an appropriate local grid is defined, we can divide the problem space into domains of varying size, R S , such that a multi-level hierarchical decomposition is built. In this scheme, we keep track of the parent–child relationship (blocks of level i contain blocks of level i + 1, the level being higher meaning smaller blocks). We define two domains to be well-separated if their distance, R d , fulfills R d > W · R S . Domains that are not well-separated will be called neighbors. We can now define, in a similar fashion to the FMM algorithm, the ‘Interaction List’ of a domain j , as the set of all domains which are well separated from j , while their parents are not well separated from the parent of j . This concept is illustrated in Fig. 2 .
 ###### 
From cou.: 20 Next, we would like to build a method that would allow us to sample expression (7) and so use a cheaper interpolation scheme for the potential at other arbitrary grid points. At this point we deviate from traditional FMM and build the auxiliary grids. Expression (7) consists of elements of the form r−aeibθeicϕ with 1 ≤ a ≤ T + 1, −T ≤ b, c ≤ T. Thus, we can sample T + 1 equally spaced points in the α ≡ r−1 variable and 2T + 1 in each of the angular coordinate variables, to fully reconstruct VT from the samples. We also note that for larger R, it is evident from eqn (8) that we can use a smaller T and hence less angular sampling points. The reconstruction is done using a polynomial interpolation in the α variable and an interpolation filter in the angular coordinates.37
From Soup: 20 We now describe how by the combination of hierarchical decomposition and far field interpolation we calculate the electrostatic potential. In a general 3D problem, with a cubic domain, we divide space into 8 cubes and then repeatedly divide each cube into 8 child cubes until we reach the minimal allowed domain size which can be 1 grid point or bigger. We define level 0 as the whole problem domain and call it the highest level. Level 1 will have 8 cubes and so on. For simplicity, we have assumed that our domain is a cube of size 2 N × 2 N × 2 N – this assumption is not necessary as we can play with the minimal domain size and also add zeros to a more general box. While the algorithm can be implemented in 3D as described above and in ref. 37 , we have made the choice of considering first elongated structures where our box is of size L x × L y × L z and we have L z ≫ L x , L y . To demonstrate the algorithm scaling with L z , we made the simplification of performing domain decomposition only along the z axis, such that the angular sampling in θ , ϕ can be approximated by sampling in the x , y co-ordinates, and the interpolation of the potential at any point ( x , y , z ) can be made simply by only using points with the same ( x , y ) co-ordinates. These simplifications still improve the algorithms' numerical complexity while yielding an acceptable numerical error.
 ###### 
From cou.: 21 So far, we have treated the far-field potential of a single volume and have devised an α grid that enables us to interpolate the potential. The α grid is uniform in r−1, but non-uniform in r. The grid thus formed with the radial and angular variables is a non-uniform auxiliary grid which we call the NG. Note that although there are codes that solve the KS equations themselves on a non-uniform grid,14,42,43 the idea here is different – we use many auxiliary non-uniform grids for the purpose of electrostatic potential interpolation. In a typical situation of decomposition of space, we would like to gather the far-field potential of many distinct domains at a given domain. To that end, we devise a new local grid that will allow us to interpolate the far-field contribution of several sources. This local grid is illustrated in Fig. 1.
From Soup: 21 The algorithm is now defined as follows:
 ###### 
From cou.: 22 In this construction, we build a grid that is uniform in all co-ordinates and has a total number of grid points that is also independent of system size for a given required relative error. In practice, we use sampling that is denser than the theoretical requirements to allow for a linear interpolation of the potential from its samples, which reduces the total complexity. Also, the potential at the sampling points is at first constructed using the exact, discretized integration form, eqn (6), and not the truncated multipole expression, and the values that are sampled on the grid are of the function rV(), which is a smoother function and is less prone to numerical issues. Once an appropriate local grid is defined, we can divide the problem space into domains of varying size, RS, such that a multi-level hierarchical decomposition is built. In this scheme, we keep track of the parent–child relationship (blocks of level i contain blocks of level i + 1, the level being higher meaning smaller blocks). We define two domains to be well-separated if their distance, Rd, fulfills Rd >W·RS. Domains that are not well-separated will be called neighbors. We can now define, in a similar fashion to the FMM algorithm, the ‘Interaction List’ of a domain j, as the set of all domains which are well separated from j, while their parents are not well separated from the parent of j. This concept is illustrated in Fig. 2.
From Soup: 22 • hierarchical domain decomposition.
 ###### 
From cou.: 23 We now describe how by the combination of hierarchical decomposition and far field interpolation we calculate the electrostatic potential. In a general 3D problem, with a cubic domain, we divide space into 8 cubes and then repeatedly divide each cube into 8 child cubes until we reach the minimal allowed domain size which can be 1 grid point or bigger. We define level 0 as the whole problem domain and call it the highest level. Level 1 will have 8 cubes and so on. For simplicity, we have assumed that our domain is a cube of size 2N × 2N × 2N – this assumption is not necessary as we can play with the minimal domain size and also add zeros to a more general box. While the algorithm can be implemented in 3D as described above and in ref. 37, we have made the choice of considering first elongated structures where our box is of size Lx × Ly × Lz and we have Lz ≫ Lx, Ly. To demonstrate the algorithm scaling with Lz, we made the simplification of performing domain decomposition only along the z axis, such that the angular sampling in θ,ϕ can be approximated by sampling in the x,y co-ordinates, and the interpolation of the potential at any point (x,y,z) can be made simply by only using points with the same (x,y) co-ordinates. These simplifications still improve the algorithms' numerical complexity while yielding an acceptable numerical error.
From Soup: 23 • At the lowest level, calculate the exact potential on the far field NG and near neighbor potentials.
 ###### 
From cou.: 24 The algorithm is now defined as follows:
From Soup: 24 • An up-tree stage – for each level – build a far field NG for each domain by interpolation of the child domains – the interpolation is needed because the NGs of the domains are not the same.
 ###### 
From cou.: 25 • hierarchical domain decomposition.
From Soup: 25 • We now use a down-tree pass to sum the contribution of different blocks. Starting from level 2 we take each block interaction list (IL) domain and interpolate their far-field NG values into the block local grid. From level 3 and lower we add also the contribution of the domain's parent grid potential. And so
 ###### 
From cou.: 26 • At the lowest level, calculate the exact potential on the far field NG and near neighbor potentials.
From Soup: 26 The last stage is illustrated in Fig. 2 . At the end of the last stage we get the potential at every grid point.
 ###### 
From cou.: 27 • An up-tree stage – for each level – build a far field NG for each domain by interpolation of the child domains – the interpolation is needed because the NGs of the domains are not the same.
From Soup: 27 We first checked the performance of the algorithm on a synthetic problem where we have produced a charge density and compared speeds of a direct calculation to the NG implementation. We took a box of 8 × 8 × L z points with L z going till 600, and compared the speeds as shown in Fig. 3 .
 ###### 
From cou.: 28 • We now use a down-tree pass to sum the contribution of different blocks. Starting from level 2 we take each block interaction list (IL) domain and interpolate their far-field NG values into the block local grid. From level 3 and lower we add also the contribution of the domain's parent grid potential. And so
From Soup: 28 Fig. 3 clearly shows linear scaling compared to the cubic scaling of a direct calculation. It should be noted that since we have performed the hierarchical decomposition only in one dimension this is still not very efficient as the scaling is ( n x 2 n y 2 n z ). To reach the full efficiency one needs to carry out the decomposition in all dimensions – this was done in ref. 37 for electrostatic applications and was further implemented on GPUs 38 to get additional acceleration. In those studies they report scaling values reaching ∼400 N behavior for practical applications. FMM and other implementations have also reported ( N ) and ( N log( N )) complexities. FFT based studies 24,25 report ( N log 2 ( N )), however, the FFT constant is 5 and since log 2 ( N = 10 6 ) ∼ 20 it can reach better performance on a regular grid. A possible advantage of both the NG method and FMM like methods is that they can reach significantly better performance when the charge density becomes sparse; furthermore the NG method can easily be adapted to screened potentials, other kernels and also to work with codes that solve the KS equations on non-uniform grids.
 ###### 
From cou.: 29 The last stage is illustrated in Fig. 2. At the end of the last stage we get the potential at every grid point.
From Soup: 29 An additional consideration is memory; the NG main memory requirement is coming from the non-uniform auxiliary grids at the lowest level, which is ( N ) with a constant that depends on the chosen size of the α grid and the lowest level block size. The algorithm accuracy is controlled by the density of the NG and the size of the smallest domain. As the algorithm is implicitly based on the truncation of the multipole expansion, the errors in potential estimation can in some cases accumulate in the total energy expression, this makes the convergence tougher (higher T and therefore denser NGs). However, the eigenvalues and changes in total energy ( e.g. due to ionization or geometry change) converge much faster. The convergence can be significantly improved by calculating the local ionic term also by the NG method as some of the possible truncation errors will cancel out.
 ###### 
From cou.: 30 We first checked the performance of the algorithm on a synthetic problem where we have produced a charge density and compared speeds of a direct calculation to the NG implementation. We took a box of 8 × 8 × Lz points with Lz going till 600, and compared the speeds as shown in Fig. 3.
From Soup: 30 A simple test case for an elongated structure is that of 1D chains of carbon, also known as carbyne. Such chains can appear in two forms, 44 one called cumulene, where the carbons in the chain are equi-distant and have a double bond ( C C ) n , and the other called polyyne where there are alternating single and triple bonds (–C C–) n . To test our approach we have calculated H(–C C–) n H with n = 20 and n = 55 and verified that the eigenvalues we get with the CG and with the NG are the same. We have used a box of 12 a.u. × 12 a.u. × 160 a.u. and also a box of 12 a.u. × 12 a.u. × 320 a.u. While it is possible to calculate with a thinner box – it results in wrong eigenvalues as the confinement of the wavefunction becomes too unrealistic. In all calculations we have used a grid spacing of 0.4 a.u. We have also calculated the periodic case, (–C C–) n , as in ref. 44 for a cell of 5.159 a.u. and 18.8973 a.u. (10 Å) in other dimensions. We have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6 and H: 1.39. The periodic calculations were compared to plane-wave calculations with PAW pseudopotentials that were done with the VASP code. 5 In addition to the case of 1D polyyne chains, we have also calculated additional examples (shown in Appendix B) of an alkyl chain of length 40 – C 40 H 82 , polar poly-pyrimidine chains of lengths 10 and 20 ((C 4 N 2 H 2 ) n H 2 ) units and alpha helix configurations of poly-glycine with 40 amino acids, C 80 H 122 N 40 O 41 . The peptide example is a bit artificial as peptides of such a length tend to fold unless the edges are held by some other structure. Both poly-pyrimidine and poly-glycine are examples of polar chains with polar sub-units that accumulate a significant dipole for the whole chain. The gap in polymers generally gets smaller as the chain gets longer, this is further enhanced by the polar interaction as was demonstrated for the poly-pyrimidine case. 45
 ###### 
From cou.: 31 Fig. 3 clearly shows linear scaling compared to the cubic scaling of a direct calculation. It should be noted that since we have performed the hierarchical decomposition only in one dimension this is still not very efficient as the scaling is (nx2ny2nz). To reach the full efficiency one needs to carry out the decomposition in all dimensions – this was done in ref. 37 for electrostatic applications and was further implemented on GPUs38 to get additional acceleration. In those studies they report scaling values reaching ∼400N behavior for practical applications. FMM and other implementations have also reported (N) and (Nlog(N)) complexities. FFT based studies24,25 report (Nlog2(N)), however, the FFT constant is 5 and since log2(N = 106) ∼ 20 it can reach better performance on a regular grid. A possible advantage of both the NG method and FMM like methods is that they can reach significantly better performance when the charge density becomes sparse; furthermore the NG method can easily be adapted to screened potentials, other kernels and also to work with codes that solve the KS equations on non-uniform grids.
From Soup: 31 4.2.1 Periodic case.
 ###### 
From cou.: 32 An additional consideration is memory; the NG main memory requirement is coming from the non-uniform auxiliary grids at the lowest level, which is (N) with a constant that depends on the chosen size of the α grid and the lowest level block size. The algorithm accuracy is controlled by the density of the NG and the size of the smallest domain. As the algorithm is implicitly based on the truncation of the multipole expansion, the errors in potential estimation can in some cases accumulate in the total energy expression, this makes the convergence tougher (higher T and therefore denser NGs). However, the eigenvalues and changes in total energy (e.g. due to ionization or geometry change) converge much faster. The convergence can be significantly improved by calculating the local ionic term also by the NG method as some of the possible truncation errors will cancel out.
From Soup: 32 To describe the periodic case we have used a periodic cell of 5.159 a.u. length in the periodic direction and 18.8973 a.u. (10 Å) periodicity in other dimensions. The cell is drawn in Fig. 4 . As described in ref. 44 , the distances between the atoms are 2.8535 a.u. (1.51 Å) for the single bond and 2.3055 a.u. (1.22 Å) for the triple bond.
 ###### 
From cou.: 33 A simple test case for an elongated structure is that of 1D chains of carbon, also known as carbyne. Such chains can appear in two forms,44 one called cumulene, where the carbons in the chain are equi-distant and have a double bond (CC)n, and the other called polyyne where there are alternating single and triple bonds (–CC–)n. To test our approach we have calculated H(–CC–)nH with n = 20 and n = 55 and verified that the eigenvalues we get with the CG and with the NG are the same. We have used a box of 12 a.u. × 12 a.u. × 160 a.u. and also a box of 12 a.u. × 12 a.u. × 320 a.u. While it is possible to calculate with a thinner box – it results in wrong eigenvalues as the confinement of the wavefunction becomes too unrealistic. In all calculations we have used a grid spacing of 0.4 a.u. We have also calculated the periodic case, (–CC–)n, as in ref. 44 for a cell of 5.159 a.u. and 18.8973 a.u. (10 Å) in other dimensions. We have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6 and H: 1.39. The periodic calculations were compared to plane-wave calculations with PAW pseudopotentials that were done with the VASP code.5 In addition to the case of 1D polyyne chains, we have also calculated additional examples (shown in Appendix B) of an alkyl chain of length 40 – C40H82, polar poly-pyrimidine chains of lengths 10 and 20 ((C4N2H2)nH2) units and alpha helix configurations of poly-glycine with 40 amino acids, C80H122N40O41. The peptide example is a bit artificial as peptides of such a length tend to fold unless the edges are held by some other structure. Both poly-pyrimidine and poly-glycine are examples of polar chains with polar sub-units that accumulate a significant dipole for the whole chain. The gap in polymers generally gets smaller as the chain gets longer, this is further enhanced by the polar interaction as was demonstrated for the poly-pyrimidine case.45
From Soup: 33 We have calculated the band structure of the cell and compared the results of the plane-wave calculation to the real-space calculation as shown in Fig. 5 .
 ###### 
From cou.: 34 4.2.1 Periodic case.
From Soup: 34 4.2.2 Finite carbon chains.
 ###### 
From cou.: 35 To describe the periodic case we have used a periodic cell of 5.159 a.u. length in the periodic direction and 18.8973 a.u. (10 Å) periodicity in other dimensions. The cell is drawn in Fig. 4. As described in ref. 44, the distances between the atoms are 2.8535 a.u. (1.51 Å) for the single bond and 2.3055 a.u. (1.22 Å) for the triple bond.
From Soup: 35 Next we have calculated the properties of H(–C C–) 20 H. We took the bulk distances and calculated the electronic properties without further relaxation. The cell and structure of H(–C C–) 20 H are shown in Fig. 6 .
 ###### 
From cou.: 36 We have calculated the band structure of the cell and compared the results of the plane-wave calculation to the real-space calculation as shown in Fig. 5.
From Soup: 36 We have terminated the chain with hydrogens at a bond distance of 2.0598 a.u. (1.09 Å). An interesting thing to note is that already at n = 20 (40 C atoms) the electronic eigenvalues are already very close to the bulk state. We have compared the eigenvalues of the finite n = 20 case with the eigenvalues of a periodic k -grid of 20 points, using the fact that the band is monotonic, we have aligned the eigenvalues according to their order. This is shown in Fig. 7 for the valence band. Such a behavior of a finite system approaching the properties of the infinite polymer is known for both this and other systems. 46,47
 ###### 
From cou.: 37 4.2.2 Finite carbon chains.
From Soup: 37 We have examined the effect of neighbor correction, described earlier, on the resulting eigenvalues, where we have compared the solution of the CG with the NG algorithm with and without the 4th nearest neighbor correction as shown in Fig. 8 . As it is evident, the neighbor correction scheme is critical for getting the correct eigenvalues. We have also calculated the H(–C C–) 55 H system and reached a box size of 12 a.u. × 12 a.u. × 320 a.u. To test the algorithm, we also went to a box size of 1000 a.u. and still managed to get correct behavior of the solver. To check our calculations with non-neutral systems we have removed 1 and 2 electrons and compared the difference in total energy for both the CG and NG calculations; the difference in ionization energy was 0.003 Ry and 0.005 Ry, respectively, representing a relative error of ∼0.005 in ionization energy.
 ###### 
From cou.: 38 Next we have calculated the properties of H(–CC–)20H. We took the bulk distances and calculated the electronic properties without further relaxation. The cell and structure of H(–CC–)20H are shown in Fig. 6.
From Soup: 38 We have shown an auxiliary grid method for the calculation of the electrostatic terms in DFT. We have also shown that we get a linear scaling for elongated structures and also demonstrated the accuracy with a system of 1D carbon chains and other long molecules. While we have demonstrated the method for the ground state Hartree term, it is easy to show that the same method can be used to calculate the Fock exchange pair integrals and also the Hartree term in time dependent problems. The main advantage of the method is that it allows the use of minimal boxes. In elongated structures and also in quasi-planar structures ( e.g. very large graphene nanoribbons) this can be very helpful as the usual multipole approximation does not converge for high aspect ratio domains and so it is difficult to efficiently set the boundary conditions for Poisson equation solvers (either CGs or multi-grids). The NG scheme can also be used as a method to calculate the boundary conditions for such solvers. An important situation where the NG method (or other FMM based methods) can be even more efficient relative to other methods is when the structures are low dimensional though not linear or planar but curved – a curved 1D or 2D structure can occupy an even larger encompassing box, making the use of FFT solvers. An additional possible advantage of the method, also common to other integration based methods, is that we can easily estimate regions where either the charge density or the potential is zero or close to zero – in some cases the calculation is not needed at all at those points (either for the source charge or for the potential or both) and so a significant reduction in time can be achieved. Finally, it is also possible to tailor the grid interpolation scheme to other interaction kernels, e.g. screened potentials, with such potentials we expect better performance as the far field behavior is almost trivial.
 ###### 
From cou.: 39 We have terminated the chain with hydrogens at a bond distance of 2.0598 a.u. (1.09 Å). An interesting thing to note is that already at n = 20 (40 C atoms) the electronic eigenvalues are already very close to the bulk state. We have compared the eigenvalues of the finite n = 20 case with the eigenvalues of a periodic k-grid of 20 points, using the fact that the band is monotonic, we have aligned the eigenvalues according to their order. This is shown in Fig. 7 for the valence band. Such a behavior of a finite system approaching the properties of the infinite polymer is known for both this and other systems.46,47
From Soup: 39 The electrostatic potential in eqn (3) is composed of the V H term, arising from the electron density, and the ionic term. Naively, it is possible to write the ionic potential of a nucleus with Z protons as . However, this potential is often replaced with a softer pseudo-potential that includes the core electrons and is much smoother near the origin. In the PARSEC code, norm-conserving pseudopotentials 48 are used, and the Kleinman–Bylander method 49 is used. This makes the ionic potential a non-local operator that is represented as follows: where a = − a , r a = | a |, and ũ lm ( a ) is the atomic pseudo-wave function corresponding to angular momemntum lm and the projection coefficients are given by: with:
 ###### 
From cou.: 40 We have examined the effect of neighbor correction, described earlier, on the resulting eigenvalues, where we have compared the solution of the CG with the NG algorithm with and without the 4th nearest neighbor correction as shown in Fig. 8. As it is evident, the neighbor correction scheme is critical for getting the correct eigenvalues. We have also calculated the H(–CC–)55H system and reached a box size of 12 a.u. × 12 a.u. × 320 a.u. To test the algorithm, we also went to a box size of 1000 a.u. and still managed to get correct behavior of the solver. To check our calculations with non-neutral systems we have removed 1 and 2 electrons and compared the difference in total energy for both the CG and NG calculations; the difference in ionization energy was 0.003 Ry and 0.005 Ry, respectively, representing a relative error of ∼0.005 in ionization energy.
From Soup: 40 Above the cutoff radius, R c , we have Δ V l ( r a ) = 0 and V a loc ( r a ) = − Z ps / r a , where Z ps is the total charge of the nucleus and core electrons. The total ionic potential is then calculated by a summation over all ions in the system:
 ###### 
From cou.: 41 We have shown an auxiliary grid method for the calculation of the electrostatic terms in DFT. We have also shown that we get a linear scaling for elongated structures and also demonstrated the accuracy with a system of 1D carbon chains and other long molecules. While we have demonstrated the method for the ground state Hartree term, it is easy to show that the same method can be used to calculate the Fock exchange pair integrals and also the Hartree term in time dependent problems. The main advantage of the method is that it allows the use of minimal boxes. In elongated structures and also in quasi-planar structures (e.g. very large graphene nanoribbons) this can be very helpful as the usual multipole approximation does not converge for high aspect ratio domains and so it is difficult to efficiently set the boundary conditions for Poisson equation solvers (either CGs or multi-grids). The NG scheme can also be used as a method to calculate the boundary conditions for such solvers. An important situation where the NG method (or other FMM based methods) can be even more efficient relative to other methods is when the structures are low dimensional though not linear or planar but curved – a curved 1D or 2D structure can occupy an even larger encompassing box, making the use of FFT solvers. An additional possible advantage of the method, also common to other integration based methods, is that we can easily estimate regions where either the charge density or the potential is zero or close to zero – in some cases the calculation is not needed at all at those points (either for the source charge or for the potential or both) and so a significant reduction in time can be achieved. Finally, it is also possible to tailor the grid interpolation scheme to other interaction kernels, e.g. screened potentials, with such potentials we expect better performance as the far field behavior is almost trivial.
From Soup: 41 Eqn (13) is used exactly as in finite systems which are the focus of this work. For completeness we also describe shortly the 3D and 2D implementations. In 3D we use the Ewald summation technique 12 to calculate the ionic potential. While in 2D it is possible to use 2D forms of the Ewald summation 12,50 we have chosen 41 a different approach 51 – we add and subtract positive Gaussian charges to the ions to separate the potential into long and short range parts. The positive charge is given by: n + ( r a ) = ( γ a /π) (3/2) Z ps exp(− γ a 2 r a 2 ), and the potential of such charges is given by: V + ( r a ) = − Z ps erf(− γ a r a )/ r a . We can then represent the local potential from eqn (10) as:
 ###### 
From cou.: 42 The electrostatic potential in eqn (3) is composed of the VH term, arising from the electron density, and the ionic term. Naively, it is possible to write the ionic potential of a nucleus with Z protons as . However, this potential is often replaced with a softer pseudo-potential that includes the core electrons and is much smoother near the origin. In the PARSEC code, norm-conserving pseudopotentials48 are used, and the Kleinman–Bylander method49 is used. This makes the ionic potential a non-local operator that is represented as follows: where a = − a, ra = |a|, and ũlm(a) is the atomic pseudo-wave function corresponding to angular momemntum lm and the projection coefficients are given by:with:
From Soup: 42 The first term in eqn (14) can be shown to decay very fast 51 and hence can be easily calculated by direct summation of few neighbors. The second term can be calculated by solving the Poisson equation with 2D boundary conditions. 41 It is possible to use this method for also finite systems and to calculate the electrostatic potential of the Gaussian charges plus the electron density. This has minimal additional computational cost and has the advantage of reducing the residual errors of truncated multipole expansions because now it is calculated for locally neutral domains.
 ###### 
From cou.: 43 Above the cutoff radius, Rc, we have ΔVl(ra) = 0 and Valoc(ra) = −Zps/ra, where Zps is the total charge of the nucleus and core electrons. The total ionic potential is then calculated by a summation over all ions in the system:
From Soup: 43 We have used an alkyl chain of 40 units. As before we have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6 and H: 1.39, a grid spacing of 0.4 a.u. and a box of 20 a.u. × 20 a.u. × 140 a.u. The system is described in Fig. 9 . The CG band-gap is 6.4143 eV compared to 6.4141 eV of NGs. Some of the eigenvalues are shown in Fig. 10 , and show very good agreement between the two methods.
 ###### 
From cou.: 44 Eqn (13) is used exactly as in finite systems which are the focus of this work. For completeness we also describe shortly the 3D and 2D implementations. In 3D we use the Ewald summation technique12 to calculate the ionic potential. While in 2D it is possible to use 2D forms of the Ewald summation12,50 we have chosen41 a different approach51 – we add and subtract positive Gaussian charges to the ions to separate the potential into long and short range parts. The positive charge is given by: n+(ra) = (γa/π)(3/2)Zpsexp(−γa2ra2), and the potential of such charges is given by: V+(ra) = −Zpserf(−γara)/ra. We can then represent the local potential from eqn (10) as:
From Soup: 44 We have calculated the dipole and the band gap of both 10 and 20 unit poly-pyrimidines ((C 4 N 2 H 2 ) n H 2 ). We have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6, N: 1.5/1.5, and H: 1.39, a grid spacing of 0.4 a.u. and a box of 20 a.u. × 20 a.u. × 160 a.u. for the 10 units and 20 a.u. × 20 a.u. × 200 a.u. for the 20 units. The 10 unit system is shown in Fig. 11 . For the 10 units the CG dipole was 23.074 D compared to 23.086 D with NGs (diff. of ∼0.01 D). The CG band gap was calculated to be 1.6821 eV compared with 1.6809 of NGs (diff. of ∼0.001 eV). For the 20 unit system the CG dipole was calculated to be 42.3804 D while the NG was 42.387 D (diff. of 0.006 D), the CG band gap was 1.4783 eV compared to 1.4757 eV of NGs (diff. of 0.0026 eV). Those LDA values are slightly lower than the PBE values calculated elsewhere 45 but show very similar trends.
 ###### 
From cou.: 45 The first term in eqn (14) can be shown to decay very fast51 and hence can be easily calculated by direct summation of few neighbors. The second term can be calculated by solving the Poisson equation with 2D boundary conditions.41 It is possible to use this method for also finite systems and to calculate the electrostatic potential of the Gaussian charges plus the electron density. This has minimal additional computational cost and has the advantage of reducing the residual errors of truncated multipole expansions because now it is calculated for locally neutral domains.
From Soup: 45 The last system we have calculated is that of alpha-helix poly-glycine of 40 amino acids (C 80 H 122 N 40 O 41 ). This system is also highly polar as every peptide bond along the chain contributes to the total dipole moment of the molecule. We have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6, N: 1.5/1.5, O: 1.45/1.45, and H: 1.39, a grid spacing of 0.4 a.u. and a box of 20 a.u. × 20 a.u. × 160 a.u. The system is shown in Fig. 12 ; this structure was not fully relaxed and the dipole can still change significantly during additional geometrical relaxation. It is calculated mostly for the comparison of CGs and NGs. The CG z direction (long axis) dipole was 147.4341 D, compared to 147.402 D of NGs (diff. of ∼0.03 D), by accident we did not fully align the molecule to the box axis and so had dipoles also in other directions (CG/NG/diff.) 6.875 D/6.866 D/0.008 D in x and 5.450 D/5.449 D/0.001 D in y . The gap is already very small and with a Fermi temperature of 0.05 eV the first unoccupied state was already with ∼0.1 occupation by both calculations. The CG gap was 0.4584 eV and the NG gap was 0.4577 eV (diff. of 0.0007 eV).
 ###### 
From cou.: 46 We have used an alkyl chain of 40 units. As before we have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6 and H: 1.39, a grid spacing of 0.4 a.u. and a box of 20 a.u. × 20 a.u. × 140 a.u. The system is described in Fig. 9. The CG band-gap is 6.4143 eV compared to 6.4141 eV of NGs. Some of the eigenvalues are shown in Fig. 10, and show very good agreement between the two methods.
From Soup: 46 AN wishes to acknowledge support from ISF grant 1722/13. AB wishes to acknowledge support from ISF grant 1081/12.
 ###### 
From cou.: 47 We have calculated the dipole and the band gap of both 10 and 20 unit poly-pyrimidines ((C4N2H2)nH2). We have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6, N: 1.5/1.5, and H: 1.39, a grid spacing of 0.4 a.u. and a box of 20 a.u. × 20 a.u. × 160 a.u. for the 10 units and 20 a.u. × 20 a.u. × 200 a.u. for the 20 units. The 10 unit system is shown in Fig. 11. For the 10 units the CG dipole was 23.074 D compared to 23.086 D with NGs (diff. of ∼0.01 D). The CG band gap was calculated to be 1.6821 eV compared with 1.6809 of NGs (diff. of ∼0.001 eV). For the 20 unit system the CG dipole was calculated to be 42.3804 D while the NG was 42.387 D (diff. of 0.006 D), the CG band gap was 1.4783 eV compared to 1.4757 eV of NGs (diff. of 0.0026 eV). Those LDA values are slightly lower than the PBE values calculated elsewhere45 but show very similar trends.
From Soup: 47 W. Koch and M. Holthausen, A chemist's guide to density functional theory , Wiley-VCH, 2000 Search PubMed .
 ###### 
From cou.: 48 The last system we have calculated is that of alpha-helix poly-glycine of 40 amino acids (C80H122N40O41). This system is also highly polar as every peptide bond along the chain contributes to the total dipole moment of the molecule. We have used norm conserving pseudopotentials of an s/p cutoff radius (a.u.) of C: 1.6/1.6, N: 1.5/1.5, O: 1.45/1.45, and H: 1.39, a grid spacing of 0.4 a.u. and a box of 20 a.u. × 20 a.u. × 160 a.u. The system is shown in Fig. 12; this structure was not fully relaxed and the dipole can still change significantly during additional geometrical relaxation. It is calculated mostly for the comparison of CGs and NGs. The CG z direction (long axis) dipole was 147.4341 D, compared to 147.402 D of NGs (diff. of ∼0.03 D), by accident we did not fully align the molecule to the box axis and so had dipoles also in other directions (CG/NG/diff.) 6.875 D/6.866 D/0.008 D in x and 5.450 D/5.449 D/0.001 D in y. The gap is already very small and with a Fermi temperature of 0.05 eV the first unoccupied state was already with ∼0.1 occupation by both calculations. The CG gap was 0.4584 eV and the NG gap was 0.4577 eV (diff. of 0.0007 eV).
From Soup: 48 W. Kohn and L. J. Sham, Phys. Rev. , 1965, 140 , A1133–A1138 CrossRef .
 ###### 
From cou.: 49 AN wishes to acknowledge support from ISF grant 1722/13. AB wishes to acknowledge support from ISF grant 1081/12.
From Soup: 49 M. J. Frisch, et al. , Gaussian 03, Revision C.02 , Gaussian, Inc., Wallingford, CT, 2004 Search PubMed .
 ###### 
From cou.: 50 W. Koch and M. Holthausen, A chemist's guide to density functional theory, Wiley-VCH, 2000 Search PubMed .
From Soup: 50 J. Izquierdo, A. Vega, L. Balbás, D. Sánchez-Portal, J. Junquera, E. Artacho, J. Soler and P. Ordejón, Phys. Rev. B: Condens. Matter Mater. Phys. , 2000, 61 , 13639–13646 CrossRef CAS .
 ###### 
From cou.: 51 W. Kohn and L. J. Sham, Phys. Rev., 1965, 140, A1133–A1138 CrossRef .
From Soup: 51 G. Kresse, Phys. Rev. B: Condens. Matter Mater. Phys. , 1996, 54 , 11169–11186 CrossRef CAS .
 ###### 
From cou.: 52 M. J. Frisch, et al., Gaussian 03, Revision C.02, Gaussian, Inc., Wallingford, CT, 2004 Search PubMed .
From Soup: 52 M. D. Segall, P. J. D. Lindan, M. J. Probert, C. J. Pickard, P. J. Hasnip, S. J. Clark and M. C. Payne, J. Phys.: Condens. Matter , 2002, 14 , 2717–2744 CrossRef CAS .
 ###### 
From cou.: 53 J. Izquierdo, A. Vega, L. Balbás, D. Sánchez-Portal, J. Junquera, E. Artacho, J. Soler and P. Ordejón, Phys. Rev. B: Condens. Matter Mater. Phys., 2000, 61, 13639–13646 CrossRef CAS .
From Soup: 53 P. Giannozzi, S. Baroni, N. Bonini, M. Calandra, R. Car, C. Cavazzoni, D. Ceresoli, G. L. Chiarotti, M. Cococcioni, I. Dabo, A. Dal Corso, S. de Gironcoli, S. Fabris, G. Fratesi, R. Gebauer, U. Gerstmann, C. Gougoussis, A. Kokalj, M. Lazzeri, L. Martin-Samos, N. Marzari, F. Mauri, R. Mazzarello, S. Paolini, A. Pasquarello, L. Paulatto, C. Sbraccia, S. Scandolo, G. Sclauzero, A. P. Seitsonen, A. Smogunov, P. Umari and R. M. Wentzcovitch, J. Phys.: Condens. Matter , 2009, 21 , 395502 CrossRef PubMed .
 ###### 
From cou.: 54 G. Kresse, Phys. Rev. B: Condens. Matter Mater. Phys., 1996, 54, 11169–11186 CrossRef CAS .
From Soup: 54 L. Genovese, A. Neelov, S. Goedecker, T. Deutsch, S. A. Ghasemi, A. Willand, D. Caliste, O. Zilberberg, M. Rayson, A. Bergman and R. Schneider, J. Chem. Phys. , 2008, 129 , 014109 CrossRef PubMed .
 ###### 
From cou.: 55 M. D. Segall, P. J. D. Lindan, M. J. Probert, C. J. Pickard, P. J. Hasnip, S. J. Clark and M. C. Payne, J. Phys.: Condens. Matter, 2002, 14, 2717–2744 CrossRef CAS .
From Soup: 55 J. Chelikowsky, N. Troullier, K. Wu and Y. Saad, Phys. Rev. B: Condens. Matter Mater. Phys. , 1994, 50 , 11355–11364 CrossRef CAS .
 ###### 
From cou.: 56 P. Giannozzi, S. Baroni, N. Bonini, M. Calandra, R. Car, C. Cavazzoni, D. Ceresoli, G. L. Chiarotti, M. Cococcioni, I. Dabo, A. Dal Corso, S. de Gironcoli, S. Fabris, G. Fratesi, R. Gebauer, U. Gerstmann, C. Gougoussis, A. Kokalj, M. Lazzeri, L. Martin-Samos, N. Marzari, F. Mauri, R. Mazzarello, S. Paolini, A. Pasquarello, L. Paulatto, C. Sbraccia, S. Scandolo, G. Sclauzero, A. P. Seitsonen, A. Smogunov, P. Umari and R. M. Wentzcovitch, J. Phys.: Condens. Matter, 2009, 21, 395502 CrossRef PubMed .
From Soup: 56 J. Chelikowsky, N. Troullier and Y. Saad, Phys. Rev. Lett. , 1994, 72 , 1240–1243 CrossRef CAS .
 ###### 
From cou.: 57 L. Genovese, A. Neelov, S. Goedecker, T. Deutsch, S. A. Ghasemi, A. Willand, D. Caliste, O. Zilberberg, M. Rayson, A. Bergman and R. Schneider, J. Chem. Phys., 2008, 129, 014109 CrossRef PubMed .
From Soup: 57 L. Kronik, A. Makmal, M. L. Tiago, M. M. G. Alemany, M. Jain, X. Huang, Y. Saad and J. R. Chelikowsky, Phys. Status Solidi B , 2006, 243 , 1063–1079 CrossRef CAS PubMed .
 ###### 
From cou.: 58 J. Chelikowsky, N. Troullier, K. Wu and Y. Saad, Phys. Rev. B: Condens. Matter Mater. Phys., 1994, 50, 11355–11364 CrossRef CAS .
From Soup: 58 K. Hirose, First-principles Calculations in Real-space Formalism: Electronic Configurations and Transport Properties of Nanostructures , World Scientific Publishing Company Pte Limited, 2005 Search PubMed .
 ###### 
From cou.: 59 J. Chelikowsky, N. Troullier and Y. Saad, Phys. Rev. Lett., 1994, 72, 1240–1243 CrossRef CAS .
From Soup: 59 A. Castro, H. Appel, M. Oliveira, C. a. Rozzi, X. Andrade, F. Lorenzen, M. a. L. Marques, E. K. U. Gross and A. Rubio, Phys. Status Solidi B , 2006, 243 , 2465–2488 CrossRef CAS PubMed .
 ###### 
From cou.: 60 L. Kronik, A. Makmal, M. L. Tiago, M. M. G. Alemany, M. Jain, X. Huang, Y. Saad and J. R. Chelikowsky, Phys. Status Solidi B, 2006, 243, 1063–1079 CrossRef CAS PubMed .
From Soup: 60 T. Beck, Rev. Mod. Phys. , 2000, 72 , 1041–1080 CrossRef CAS .
 ###### 
From cou.: 61 K. Hirose, First-principles Calculations in Real-space Formalism: Electronic Configurations and Transport Properties of Nanostructures, World Scientific Publishing Company Pte Limited, 2005 Search PubMed .
From Soup: 61 E. Briggs, D. Sullivan and J. Bernholc, Phys. Rev. B: Condens. Matter Mater. Phys. , 1996, 54 , 362–375 CrossRef .
 ###### 
From cou.: 62 A. Castro, H. Appel, M. Oliveira, C. a. Rozzi, X. Andrade, F. Lorenzen, M. a. L. Marques, E. K. U. Gross and A. Rubio, Phys. Status Solidi B, 2006, 243, 2465–2488 CrossRef CAS PubMed .
From Soup: 62 J. R. Chelikowsky, A. T. Zayak, T.-L. Chan, M. L. Tiago, Y. Zhou and Y. Saad, J. Phys.: Condens. Matter , 2009, 21 , 064207 CrossRef PubMed .
 ###### 
From cou.: 63 T. Beck, Rev. Mod. Phys., 2000, 72, 1041–1080 CrossRef CAS .
From Soup: 63 Y. Hasegawa, J.-I. Iwata, M. Tsuji, D. Takahashi, A. Oshiyama, K. Minami, T. Boku, F. Shoji, A. Uno, M. Kurokawa, H. Inoue, I. Miyoshi and M. Yokokawa, Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis, New York, NY, USA, 2011, pp. 1:1–1:11.
 ###### 
From cou.: 64 E. Briggs, D. Sullivan and J. Bernholc, Phys. Rev. B: Condens. Matter Mater. Phys., 1996, 54, 362–375 CrossRef .
From Soup: 64 M. Marques, Fundamentals of Time-Dependent Density Functional Theory , Springer, 2012 Search PubMed .
 ###### 
From cou.: 65 J. R. Chelikowsky, A. T. Zayak, T.-L. Chan, M. L. Tiago, Y. Zhou and Y. Saad, J. Phys.: Condens. Matter, 2009, 21, 064207 CrossRef PubMed .
From Soup: 65 M. Mundt and S. Kümmel, Phys. Rev. B: Condens. Matter Mater. Phys. , 2007, 76 , 035413 CrossRef .
 ###### 
From cou.: 66 Y. Hasegawa, J.-I. Iwata, M. Tsuji, D. Takahashi, A. Oshiyama, K. Minami, T. Boku, F. Shoji, A. Uno, M. Kurokawa, H. Inoue, I. Miyoshi and M. Yokokawa, Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis, New York, NY, USA, 2011, pp. 1:1–1:11.
From Soup: 66 M. Mundt, J. Theor. Comput. Chem. , 2009, 08 , 561–574 CrossRef CAS .
 ###### 
From cou.: 67 M. Marques, Fundamentals of Time-Dependent Density Functional Theory, Springer, 2012 Search PubMed .
From Soup: 67 Y. Saad, Iterative Methods for Sparse Linear Systems: Second Edition , Society for Industrial and Applied Mathematics (SIAM), 3600 Market Street, Floor 6, Philadelphia, PA 19104, 2003 Search PubMed .
 ###### 
From cou.: 68 M. Mundt and S. Kümmel, Phys. Rev. B: Condens. Matter Mater. Phys., 2007, 76, 035413 CrossRef .
From Soup: 68 A. Brandt, Math. Comput. , 1977, 31 , 333–390 CrossRef .
 ###### 
From cou.: 69 M. Mundt, J. Theor. Comput. Chem., 2009, 08, 561–574 CrossRef CAS .
From Soup: 69 T. L. Beck, Int. J. Quantum Chem. , 1997, 65 , 477–486 CrossRef CAS .
 ###### 
From cou.: 70 Y. Saad, Iterative Methods for Sparse Linear Systems: Second Edition, Society for Industrial and Applied Mathematics (SIAM), 3600 Market Street, Floor 6, Philadelphia, PA 19104, 2003 Search PubMed .
From Soup: 70 A. Cerioni, L. Genovese, A. Mirone and V. A. Sole, J. Chem. Phys. , 2012, 137 , 134108 CrossRef PubMed .
 ###### 
From cou.: 71 A. Brandt, Math. Comput., 1977, 31, 333–390 CrossRef .
From Soup: 71 N. D. M. Hine, J. Dziedzic, P. D. Haynes and C.-K. Skylaris, J. Chem. Phys. , 2011, 135 , 204103 CrossRef PubMed .
 ###### 
From cou.: 72 T. L. Beck, Int. J. Quantum Chem., 1997, 65, 477–486 CrossRef CAS .
From Soup: 72 J. Jackson, Classical Electrodynamics , Wiley, 1998 Search PubMed .
 ###### 
From cou.: 73 A. Cerioni, L. Genovese, A. Mirone and V. A. Sole, J. Chem. Phys., 2012, 137, 134108 CrossRef PubMed .
From Soup: 73 V. Rokhlin, J. Comput. Phys. , 1985, 60 , 187–207 CrossRef .
 ###### 
From cou.: 74 N. D. M. Hine, J. Dziedzic, P. D. Haynes and C.-K. Skylaris, J. Chem. Phys., 2011, 135, 204103 CrossRef PubMed .
From Soup: 74 L. Greengard and V. Rokhlin, J. Comput. Phys. , 1987, 73 , 325–348 CrossRef .
 ###### 
From cou.: 75 J. Jackson, Classical Electrodynamics, Wiley, 1998 Search PubMed .
From Soup: 75 S. a. Losilla, M. M. Mehine and D. Sundholm, Mol. Phys. , 2012, 110 , 2569–2578 CrossRef CAS PubMed .
 ###### 
From cou.: 76 V. Rokhlin, J. Comput. Phys., 1985, 60, 187–207 CrossRef .
From Soup: 76 S. a. Losilla and D. Sundholm, J. Chem. Phys. , 2012, 136 , 214104 CrossRef CAS PubMed .
 ###### 
From cou.: 77 L. Greengard and V. Rokhlin, J. Comput. Phys., 1987, 73, 325–348 CrossRef .
From Soup: 77 S. R. Jensen, J. Jusélius, A. Durdek, T. Flå, P. Wind and L. Frediani, Int. J. Model., Simul., Sci. Comput. , 2014, 5 , 1441003 CrossRef .
 ###### 
From cou.: 78 S. a. Losilla, M. M. Mehine and D. Sundholm, Mol. Phys., 2012, 110, 2569–2578 CrossRef CAS PubMed .
From Soup: 78 W. Geng and R. Krasny, J. Comput. Phys. , 2013, 247 , 62–78 CrossRef CAS PubMed .
 ###### 
From cou.: 79 S. a. Losilla and D. Sundholm, J. Chem. Phys., 2012, 136, 214104 CrossRef CAS PubMed .
From Soup: 79 V. Khoromskaia and B. N. Khoromskij, Comput. Phys. Commun. , 2014, 185 , 3162–3174 CrossRef CAS PubMed .
 ###### 
From cou.: 80 S. R. Jensen, J. Jusélius, A. Durdek, T. Flå, P. Wind and L. Frediani, Int. J. Model., Simul., Sci. Comput., 2014, 5, 1441003 CrossRef .
From Soup: 80 B. N. Khoromskij, V. Khoromskaia and H.-J. Flad, SIAM J. Sci. Comput. , 2011, 33 , 45–65 CrossRef .
 ###### 
From cou.: 81 W. Geng and R. Krasny, J. Comput. Phys., 2013, 247, 62–78 CrossRef CAS PubMed .
From Soup: 81 A. Kokalj, Phys. Rev. B: Condens. Matter Mater. Phys. , 2011, 84 , 045418 CrossRef .
 ###### 
From cou.: 82 V. Khoromskaia and B. N. Khoromskij, Comput. Phys. Commun., 2014, 185, 3162–3174 CrossRef CAS PubMed .
From Soup: 82 B. Delley, J. Phys. Chem. , 1996, 100 , 6107–6110 CrossRef CAS .
 ###### 
From cou.: 83 B. N. Khoromskij, V. Khoromskaia and H.-J. Flad, SIAM J. Sci. Comput., 2011, 33, 45–65 CrossRef .
From Soup: 83 A. Boag and B. Livshitz, IEEE Trans. Microwave Theory Tech. , 2006, 54 , 3565–3570 CrossRef .
 ###### 
From cou.: 84 A. Kokalj, Phys. Rev. B: Condens. Matter Mater. Phys., 2011, 84, 045418 CrossRef .
From Soup: 84 S. Li, R. Chang, A. Boag and V. Lomakin, IEEE Trans. Antennas Propag. , 2012, 54 , 71–87 CrossRef .
 ###### 
From cou.: 85 B. Delley, J. Phys. Chem., 1996, 100, 6107–6110 CrossRef CAS .
From Soup: 85 B. Fornberg, Math. Comput. , 1988, 51 , 699–706 CrossRef .
 ###### 
From cou.: 86 A. Boag and B. Livshitz, IEEE Trans. Microwave Theory Tech., 2006, 54, 3565–3570 CrossRef .
From Soup: 86 J. Han, M. L. Tiago, T.-L. Chan and J. R. Chelikowsky, J. Chem. Phys. , 2008, 129 , 144109 CrossRef PubMed .
 ###### 
From cou.: 87 S. Li, R. Chang, A. Boag and V. Lomakin, IEEE Trans. Antennas Propag., 2012, 54, 71–87 CrossRef .
From Soup: 87 A. Natan, A. Benjamini, D. Naveh, L. Kronik, M. Tiago, S. Beckman and J. Chelikowsky, Phys. Rev. B: Condens. Matter Mater. Phys. , 2008, 78 , 1–10 CrossRef .
 ###### 
From cou.: 88 B. Fornberg, Math. Comput., 1988, 51, 699–706 CrossRef .
From Soup: 88 N. A. Modine, G. Zumbach and E. Kaxiras, Phys. Rev. B: Condens. Matter Mater. Phys. , 1997, 55 , 10289–10301 CrossRef CAS .
 ###### 
From cou.: 89 J. Han, M. L. Tiago, T.-L. Chan and J. R. Chelikowsky, J. Chem. Phys., 2008, 129, 144109 CrossRef PubMed .
From Soup: 89 J.-L. Fattebert, R. Hornung and A. Wissink, J. Comput. Phys. , 2007, 223 , 759–773 CrossRef PubMed .
 ###### 
From cou.: 90 A. Natan, A. Benjamini, D. Naveh, L. Kronik, M. Tiago, S. Beckman and J. Chelikowsky, Phys. Rev. B: Condens. Matter Mater. Phys., 2008, 78, 1–10 CrossRef .
From Soup: 90 A. Calzolari, N. Marzari, I. Souza and M. Buongiorno Nardelli, Phys. Rev. B: Condens. Matter Mater. Phys. , 2004, 69 , 035108 CrossRef .
 ###### 
From cou.: 91 N. A. Modine, G. Zumbach and E. Kaxiras, Phys. Rev. B: Condens. Matter Mater. Phys., 1997, 55, 10289–10301 CrossRef CAS .
From Soup: 91 F. Rissner, A. Natan, D. A. Egger, O. T. Hofmann, L. Kronik and E. Zojer, Org. Electron. , 2012, 13 , 3165–3176 CrossRef CAS PubMed .
 ###### 
From cou.: 92 J.-L. Fattebert, R. Hornung and A. Wissink, J. Comput. Phys., 2007, 223, 759–773 CrossRef PubMed .
From Soup: 92 W.-F. Li, M. Andrzejak and H. A. Witek, Phys. Status Solidi B , 2012, 249 , 306–316 CrossRef CAS PubMed .
 ###### 
From cou.: 93 A. Calzolari, N. Marzari, I. Souza and M. Buongiorno Nardelli, Phys. Rev. B: Condens. Matter Mater. Phys., 2004, 69, 035108 CrossRef .
From Soup: 93 C.-P. Chou, W.-F. Li, H. A. Witek and M. Andrzejak, in Vibrational Spectroscopy of Linear Carbon Chains , ed. L. Nemes and S. Irle, World Scientific, 2012, ch. 12 Search PubMed .
 ###### 
From cou.: 94 F. Rissner, A. Natan, D. A. Egger, O. T. Hofmann, L. Kronik and E. Zojer, Org. Electron., 2012, 13, 3165–3176 CrossRef CAS PubMed .
From Soup: 94 N. Troullier and J. L. Martins, Phys. Rev. B: Condens. Matter Mater. Phys. , 1991, 43 , 1993–2006 CrossRef CAS .
 ###### 
From cou.: 95 W.-F. Li, M. Andrzejak and H. A. Witek, Phys. Status Solidi B, 2012, 249, 306–316 CrossRef CAS PubMed .
From Soup: 95 L. Kleinman and D. Bylander, Phys. Rev. Lett. , 1982, 48 , 1425–1428 CrossRef CAS .
 ###### 
From cou.: 96 C.-P. Chou, W.-F. Li, H. A. Witek and M. Andrzejak, in Vibrational Spectroscopy of Linear Carbon Chains, ed. L. Nemes and S. Irle, World Scientific, 2012, ch. 12 Search PubMed .
From Soup: 96 S. W. De Leeuw and J. W. Perram, Mol. Phys. , 1979, 37 , 1313–1322 CrossRef CAS PubMed .
 ###### 
From cou.: 97 N. Troullier and J. L. Martins, Phys. Rev. B: Condens. Matter Mater. Phys., 1991, 43, 1993–2006 CrossRef CAS .
From Soup: 97 C. A. Rozzi, D. Varsano, A. Marini, E. K. U. Gross and A. Rubio, Phys. Rev. B: Condens. Matter Mater. Phys. , 2006, 73 , 205119 CrossRef .
 ###### 
From cou.: 98 L. Kleinman and D. Bylander, Phys. Rev. Lett., 1982, 48, 1425–1428 CrossRef CAS .
From cou.: 99 S. W. De Leeuw and J. W. Perram, Mol. Phys., 1979, 37, 1313–1322 CrossRef CAS PubMed .
From cou.: 100 C. A. Rozzi, D. Varsano, A. Marini, E. K. U. Gross and A. Rubio, Phys. Rev. B: Condens. Matter Mater. Phys., 2006, 73, 205119 CrossRef .
